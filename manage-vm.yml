---
- name: Manage FortStack VM
  hosts: localhost
  gather_facts: false
  vars_files:
    - group_vars/all.yml
  vars:
    action: "delete"
  tasks:
    - name: Validate action parameter
      fail:
        msg: "Invalid action. Must be one of: start, stop, delete"
      when: action not in ['start', 'stop', 'delete']

    - name: Get instance by name tag
      amazon.aws.ec2_instance_info:
        region: "{{ aws_region }}"
        filters:
          "tag:Name": "{{ instance_name }}"
          "instance-state-name": ["running", "stopped", "stopping", "pending"]
      register: instance_info
      when: action in ['start', 'stop', 'delete']

    - name: Set instance ID
      set_fact:
        instance_id: "{{ instance_info.instances[0].id }}"
      when: instance_info.instances | length > 0

    - name: Start EC2 instance
      amazon.aws.ec2_instance:
        instance_ids: "{{ instance_id }}"
        region: "{{ aws_region }}"
        state: running
        wait: true
        wait_timeout: 500
      when: action == 'start' and instance_id is defined
      tags: [vm, start]

    - name: Stop EC2 instance
      amazon.aws.ec2_instance:
        instance_ids: "{{ instance_id }}"
        region: "{{ aws_region }}"
        state: stopped
        wait: true
        wait_timeout: 500
      when: action == 'stop' and instance_id is defined
      tags: [vm, stop]

    - name: Terminate EC2 instance
      amazon.aws.ec2_instance:
        instance_ids: "{{ instance_id }}"
        region: "{{ aws_region }}"
        state: terminated
        wait: true
        wait_timeout: 500
      when: action == 'delete' and instance_id is defined
      tags: [vm, delete]

    - name: Clean up security group
      amazon.aws.ec2_group:
        name: "{{ security_group_name }}"
        region: "{{ aws_region }}"
        state: absent
      when: action == 'delete'
      tags: [cleanup, security]

    - name: Clean up key pair
      amazon.aws.ec2_key:
        name: "{{ key_name }}"
        region: "{{ aws_region }}"
        state: absent
      when: action == 'delete'
      tags: [cleanup, keys]

    - name: Display management result
      debug:
        msg: |
          ===============================================
          VM Management Action: {{ action | upper }}
          ===============================================
          
          {% if action == 'start' %}
          Instance has been started successfully!
          {% elif action == 'stop' %}
          Instance has been stopped successfully!
          {% elif action == 'delete' %}
          Instance has been terminated successfully!
          All associated resources have been cleaned up.
          {% endif %}
          
          ===============================================